wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(0.05)
wsh$SendKeys("AA")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(0.05)
wsh$SendKeys("A")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(0.1)
wsh$SendKeys("A")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(0.1)
wsh$SendKeys("AA")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(0.1)
wsh$SendKeys("AsdasdA")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("AsdasdA")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("AsdasdasdasdasdebndiadgfoadfafA")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("a")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("+a")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("+a")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("{+}a")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%+{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("+a")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%+{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("+a")
}
cls()
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("%+{TAB}")
Sys.sleep(0.05)
wsh$SendKeys("{ENTER}")
Sys.sleep(1)
wsh$SendKeys("+a")
}
cls()
{
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("+%+^+{DEL}")
}
cls <- function () {
require(RDCOMClient)
wsh <- COMCreate("Wscript.Shell")
wsh$SendKeys("{LEFT}")
}
cls()
library("rJava")
install.packages("rJava")
library("rJava")
.jinit()                           # this starts the JVM
jRobot <- .jnew("java/awt/Robot")  # Create object of the Robot class
.jcall(jRobot,, "setAutoDelay",as.integer(500))
.jcall(jRobot,, "mouseMove",as.integer(100),as.integer(200))
.jcall(jRobot,, "mouseMove",as.integer(100),as.integer(200))
.jinit()                           # this starts the JVM
jRobot <- .jnew("java/awt/Robot")  # Create object of the Robot class
.jcall(jRobot,, "setAutoDelay",as.integer(500))
.jcall(jRobot,, "mouseMove",as.integer(100),as.integer(200))
Mouse = function(x,y){
.jcall(jRobot,, "mouseMove",as.integer(x),as.integer(y))}
Mouse(200,300)
Mouse(0,0)
Mouse(1280,760)
Mouse(1920,1080)
?.jcall()
.jcall(jRobot,, "mousePreasdss",as.integer(16))
Mouse = function(x,y){
.jcall(jRobot,, "mouseMove",as.integer(x),as.integer(y))
.jcall(jRobot,, "mousePress",as.integer(16))
.jcall(jRobot,, "mouseRelease",as.integer(16)}
Mouse(0,0)
Mouse(1920,1080)
?.jcall()
.jcall(jRobot,, "mousePreasdss",as.integer(16))
Mouse = function(x,y){
.jcall(jRobot,, "mouseMove",as.integer(x),as.integer(y))
.jcall(jRobot,, "mousePress",as.integer(16))
.jcall(jRobot,, "mouseRelease",as.integer(16)}
Mouse(0,0)
Mouse(1920,1080)
?.jcall()
.jcall(jRobot,, "mousePreasdss",as.integer(16))
Mouse = function(x,y) {
.jcall(jRobot,, "mouseMove",as.integer(x),as.integer(y))
.jcall(jRobot,, "mousePress",as.integer(16))
.jcall(jRobot,, "mouseRelease",as.integer(16)
}
Mouse(0,0)
Mouse(1920,1080)
?.jcall()
.jcall(jRobot,, "mousePreasdss",as.integer(16))
Mouse = function(x,y){
.jcall(jRobot,, "mouseMove",as.integer(x),as.integer(y))
.jcall(jRobot,, "mousePress",as.integer(16))
.jcall(jRobot,, "mouseRelease",as.integer(16)}
Mouse = function(x,y){
.jcall(jRobot,, "mouseMove",as.integer(x),as.integer(y))
.jcall(jRobot,, "mousePress",as.integer(16))
.jcall(jRobot,, "mouseRelease",as.integer(16))}
grid.locator(unit = "native")
install.packages("grid.locator")
getPointerInfo().getLocation()
.jcall(getPointerInfo().getLocation())
.jcall("getPointerInfo().getLocation()")
.jcall("MouseInfo.getPointerInfo().getLocation()")
J("MouseInfo.getPointerInfo().getLocation()")
J(MouseInfo.getPointerInfo().getLocation())
jcall(MouseInfo.getPointerInfo().getLocation())
.jcall(MouseInfo.getPointerInfo().getLocation())
.jcall("MouseInfo.getPointerInfo().getLocation()")
jcall("MouseInfo.getPointerInfo().getLocation()")
.jcall("MouseInfo.getPointerInfo()")
.jcall(method="MouseInfo.getPointerInfo()")
.jcall(jRobot,,method="MouseInfo.getPointerInfo()")
.jcall(jRobot,,method="MouseInfo.getPointerInfo().getLocation()")
.jinit()                           # this starts the JVM
jRobot <- .jnew("java/awt/Robot")  # Create object of the Robot class
.jcall(jRobot,,method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot,returnSig = "V",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot,returnSig = "S",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot,returnSig = "T",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jcall,returnSig = "T",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jcall,,method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot,,method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot, returnSig = "str",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot, returnSig = "",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot, returnSig = "V",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot, returnSig = "()V",method="MouseInfo.getPointerInfo().getLocation()")
.jcall(jRobot, returnSig = "()V",method="MouseInfo.getPointerInfo().getLocation()")
library("RSelenium")
library("RSelenium")
remDr <- remoteDriver(browserName = "mozilla") #mozilla, chrome
remDr$open()
remDr <- remoteDriver(browserName = "chrome") #mozilla, chrome
remDr$open()
remDr$navigate("http://www.google.com")
remDr$navigate("https://www.getonbrd.com/myjobs")
remDr$navigate("https://www.getonbrd.com/myjobs")
remDr$navigate("https://www.getonbrd.com/myjobs")
txtarea=remDr$findElement(using = "css selasdector", "textarea:nth-child(1)")
txtarea=remDr$findElement(using = "class name", "tag")
i=txtarea$getElementText()
i
txtarea=remDr$findElement(using = "class name", "tag")
i=txtarea$getElementText()
i
find=remDr$findElements(using = "class name", "tag")
find
find$elementID
locate=find$elementID("1")
locate=find$elementID("1")
locate=find$elementID(1)
find
locate=find$finElement(using="elementID", "1")
find
find$nativeEvents
list(find)
list(1)
list(2)
find(1)
find[1]
find[2]
class(find)
find[1]$nativeEvents
find[1]
locate=find$finElement(using="elemasdentID", "1")
txtarea=remDr$findElement(using = "claass name", "tag")
locate=find$getElementText()
find=remDR$findElement(using="xpath", "//*[contains(concat( " ", @class, " " ), concat( " ", "tag", " " ))]")
find=remDR$findElement(using='xpath', "//*[contains(concat( " ", @class, " " ), concat( " ", "tag", " " ))]")
find=remDr$findElement(using='xpath', "//*[contains(concat( " ", @class, " " ), concat( " ", "tag", " " ))]")
find=remDr$findElement(using="xpath", "//*[contains(concat( " ", @class, " " ), concat( " ", "tag", " " ))]")
find=remDr$findElement(using="xpath", "//*[contains(concat( ' ', @class, ' ' ), concat( ' ', 'tag', ' ' ))]")
find=remDr$findElements(using = "class name", "tag")
locate=unlist(lapply(find, function(x) {x$getElementText()}))
find
locate
find=remDr$findElements(using = "class name", "tag")
locate=unlist(lapply(find, function(x) {x$getElementText()}))
locate
header(locate)
head(locate)
tail(locate)
tail(locate,30)
head(locate)
tail(locate,30)
head(locate)
class(locate)
hist(locate)
table(locate)
t(table(locate))
table(locate)
as.data.frame(table(locate))
data=as.data.frame(table(locate))
hist(data)
hist(data$freq)
hist(data$Freq)
library(ggplot)
library(ggplot2)
ggplot(data)+ geom_histogram()
ggplot(data, aes(data$locate))+ geom_histogram()
ggplot(data, aes(data$Freq))+ geom_histogram()
ggplot(data, aes(data$Freq))+ geom_histogram(fill=white)
ggplot(data, aes(data$Freq))+ geom_histogram(fill="white")
ggplot(data, aes(data$Freq))+ geom_histogram(position="identity")
ggplot(data, aes(data$Freq))+ geom_histogram(position="locate")
ggplot(data, aes(data$Freq))+ geom_histogram()
ggplot(data, aes(data$Freq))+ geom_histogram() + theme(legend.position = "right")
ggplot(data, aes(data$Freq, fill=locate))+ geom_histogram() + theme(legend.position = "right")
ggplot(data, aes(data$Freq))+ geom_histogram() + theme(legend.position = "right") + geom_text(aes(label=data$locate))
ggplot(data, aes(data$Freq))+ geom_bar()
ggplot(data, aes(data$Freq))+ geom_bar() + geom_text(data, aes(x=locate, y=Freq))
ggplot(data, aes(data$Freq))+ geom_bar() + geom_text(data, aes(x=locate, y=Freq), vjust=0)
ggplot(data, aes(data$Freq))+ geom_bar() + geom_text(data=data, aes(x=locate, y=Freq), vjust=0)
ggplot(data=data, aes(data$Freq))+ geom_bar() + geom_text(data=data, aes(x=locate, y=Freq), vjust=0)
wdir
wdir()
getwd()
write.table(locate, sep="\t", quote=false, colnames=true, row.names = false)
write.table(locate, sep="\t", quote=false, col.names=true, row.names = false)
write.table(locate, sep="\t", quote=false, col.names=true, rownames = false)
write.table(locate, sep="\t", quote=false, col.names=true, row.names =FALSE)
write.table(locate,locate.txt, sep="\t", quote=FALSE, col.names=TRUE, row.names =FALSE)
write.table(locate, locate.txt, sep="\t", quote=F, row.names=F)
write.table(locate.txt, locate, sep="\t", quote=F, row.names=F)
write.table(locate.txt, locate, sep="\t", quote=F, row.names=F)
write.table(locate.txt, data, sep="\t", quote=F, row.names=F)
write.table(data, locate.txt, sep="\t", quote=F, row.names=F)
write.table("locate.txt", data, sep="\t", quote=F, row.names=F)
?write.table()
write.table(data, "frecuencia.txt", sep="\t", quote=F, row.names=F)
library("RMySQL")
mydb = dbConnect(MySQL(), user='root', password='3571822',
dbname='database', host='localhost')
mydb = dbConnect(MySQL(), user='root', password='3571822',
dbname='database', host='localhost')
mydb = dbConnect(MySQL(), user='root', password='3571822',
dbname='database', host='localhost:3306')
mydb = dbConnect(MySQL(), user='root', password='3571822',
dbname='database', host='localhost')
runlist = c(1, 2, 3, 4, 5)
run <- rep(seq(5), 3)
edge1 <- sample(20, 15)
edge2 <- sample(20, 15)
weights <- sample(50, 15)
boo <- as.data.frame(cbind(run, edge1, edge2, weights))
for (i in runlist) {
bop <- boo %>% filter( run == i )
str(boo)
}
boo
for(i in runlist){Filter[[i]]=ifelse((New[[i]] == i, 1, 0)}
colnames(Filter)=c(paste("Filter_",1:(ncol(Filter)),sep=""))
newdata=cbind(data,Filter)
newdata
boo[boo$runlist==1,]
boo
boo[boo$run==1,]
bop <- boo %>% filter( run == 1 ) %>% select( edge1, edge2, weights )
library(dplyr)
bop <- boo %>% filter( run == 1 ) %>% select( edge1, edge2, weights )
bop
boo
boo[boo$run==1,]
for (i in runlist) {
bop <- boo %>% filter( run == i )
str(boo)
}
bing <- graph.data.frame(bop)
install.packages("igraph")
library(igraph)
bing <- graph.data.frame(bop)
bing <- graph.data.frame(bop)
bing <- graph.data.frame(bop)
plot(bing)
for(i in runlist){
TEMP=boo[boo$run==i,]
TEMP2[[i]]=graph.data.frame(TEMP)
}
TEMP2=list()
for(i in runlist){
TEMP=boo[boo$run==i,]
TEMP2[[i]]=graph.data.frame(TEMP)
}
TEMP2
TEMP2[1]
plot(TEMP2[1])
plot(unlist(TEMP2[1]))
TEMP2[1]
bing
TEMP2
TEMP2[[1]]
plot(unlist(TEMP2[[1]]))
bing
TEMP2[[1]]
unlist(TEMP2[[1]])
as.data.frame(unlist(TEMP2[[1]]))
as.data.frame(unlist(TEMP))
as.data.frame(unlist(TEMP2))
as.data.frame(unlist(TEMP2[[1]]))
as.data.frame(unlist(TEMP2[1]))
unlist(TEMP2)
unlist(TEMP2[1])
unlist(TEMP2[[1]])
TEMP2
for(i in runlist){
TEMP=boo[boo$run==i,]
TEMP3=graph.data.frame(TEMP)
assign(paste("Graph_",i,sep=""),TEMP3)
}
Graph_1
graph.data.frame(Graph_1)
bing <- graph.data.frame(Data_1)
bing <- graph.data.frame(Graph_1)
bing
Graph_1
Graph_2
Graph_3
Graph_4
bing <- graph.data.frame(Graph_4)
bing
Graph_4
Graph_5
bing
Graph_5
bing <- graph.data.frame(Graph_5)
plot(Graph_1)
plot(Graph_2)
for(i in runlist){
TEMP=plot(graph.data.frame(boo[boo$run==i,]))
assign(paste("Graph_",i,sep=""),TEMP)
}
Graph_1
Graph_2
Graph_3
for(i in runlist){
TEMP=graph.data.frame(boo[boo$run==i,])
assign(paste("Graph_",i,sep=""),TEMP)
}
plot(Graph_1)
plot(Graph_2)
Graph_1
runlist = c(1, 2, 3, 4, 5)
run <- rep(seq(5), 3)
edge1 <- sample(20, 15)
edge2 <- sample(20, 15)
weights <- sample(50, 15)
boo <- as.data.frame(cbind(run, edge1, edge2, weights))
for(i in runlist){
bing=graph.data.frame(boo[boo$run==i,])
assign(paste("bing_",i,sep=""),bing)
}
library(igraph)
for(i in runlist){
bing=graph.data.frame(boo[boo$run==i,])
assign(paste("bing_",i,sep=""),bing)
}
plot(Graph_2)
plot(bing_1)
plot(bing_2)
plot(bing_3)
bing_3
getwd()
source('file.txt', chdir=T)
source('file.txt')
this.dir <- dirname(parent.frame(2)$ofile)
script.dir <- dirname(sys.frame(1)$ofile)
?source
this.dir <- dirname(parent.frame(2)$ofile)
this.dir <- dirname(parent.frame(1)$ofile)
parent.frame()
getSrcDirectory()
rstudioapi::getActiveDocumentContext
utils::getSrcDirectory
file.path()
file.path('rel.R')
table=read.table("~file.txt", header=F)
table=read.table("~/file.txt", header=F)
table=read.table("~\file.txt", header=F)
script.dir <- dirname(sys.frame(1)$ofile)
sourceDir <- getSrcDirectory(function(dummy) {dummy})
sourceDir
library("shiny")
library("RSelenium")
shell.exec("Rselenium.bat")
setwd("C:/Users/Naldrek/Dropbox/R/Alpha")
shell.exec("Rselenium.bat")
remDr <- remoteDriver(browserName = "chrome")
remDr$open(silent=TRUE)
if(require("shiny")){
print("Shiny is loaded correctly")
} else {
print("trying to install Shiny")
install.packages("shiny")
if(require(shiny)){
print("Shiny installed and loaded")
} else {
stop("could not install Shiny")
}
}
if(require("RSelenium")){
print("RSelenium is loaded correctly")
} else {
print("trying to install RSelenium")
install.packages("RSelenium")
if(require(RSelenium)){
print("RSelenium installed and loaded")
} else {
stop("could not install RSelenium")
}
}
